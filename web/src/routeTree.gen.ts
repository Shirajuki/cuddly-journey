/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PlaygroundImport } from './routes/playground'

// Create Virtual Routes

const EditorLazyImport = createFileRoute('/editor')()
const DocumentationLazyImport = createFileRoute('/documentation')()
const BatchEditLazyImport = createFileRoute('/batch-edit')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const EditorLazyRoute = EditorLazyImport.update({
  path: '/editor',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/editor.lazy').then((d) => d.Route))

const DocumentationLazyRoute = DocumentationLazyImport.update({
  path: '/documentation',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/documentation.lazy').then((d) => d.Route))

const BatchEditLazyRoute = BatchEditLazyImport.update({
  path: '/batch-edit',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/batch-edit.lazy').then((d) => d.Route))

const PlaygroundRoute = PlaygroundImport.update({
  path: '/playground',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/playground': {
      preLoaderRoute: typeof PlaygroundImport
      parentRoute: typeof rootRoute
    }
    '/batch-edit': {
      preLoaderRoute: typeof BatchEditLazyImport
      parentRoute: typeof rootRoute
    }
    '/documentation': {
      preLoaderRoute: typeof DocumentationLazyImport
      parentRoute: typeof rootRoute
    }
    '/editor': {
      preLoaderRoute: typeof EditorLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  PlaygroundRoute,
  BatchEditLazyRoute,
  DocumentationLazyRoute,
  EditorLazyRoute,
])

/* prettier-ignore-end */
